using System;
using Telegram.Bot;
using Telegram.Bot.Args;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace TelegramBotAberto
{
    class Program
    {
        private const string tk = "Coloque aqui o token do bot criado no BotFather";
        private static readonly TelegramBotClient bot = new TelegramBotClient(tk);  
        static void Main(string[] args)
        {
            Console.Title = "Telegram Bot B√°sico";

            bot.OnMessage += Bot_OnMessage;
            
            bot.StartReceiving();
            Console.WriteLine("Ol√°, o Bot est√° online!");
            Console.WriteLine("Pressione qualquer tecla para encerrar");
            Console.ReadLine();
            //Thread.Sleep(Timeout.Infinite);
            bot.StopReceiving();
        }

        private async static void Bot_OnMessage(object sender, MessageEventArgs e)
        {
            var msg = e.Message;
            if (msg.Text == "/start")
            {
                string texto = $"üôã‚Äç‚ôÇÔ∏è Ol√° *{msg.Chat.FirstName} {msg.Chat.LastName}*. O texto que voc√™ enviar ser√° retornado pelo Bot. " +
                    $"Voc√™ pode compartilhar a sua *localiza√ß√£o* ou o seu *contato*, basta pressionar os bot√µes abaixo.";
                
                var RequestReplyKeyboard = new ReplyKeyboardMarkup(new[]
                {
                    KeyboardButton.WithRequestLocation("üìç Localiza√ß√£o"),
                    KeyboardButton.WithRequestContact("üë§ Contato"),
                });
                await bot.SendTextMessageAsync(
                    chatId: msg.Chat.Id,
                    text: texto,
                    parseMode: ParseMode.Markdown,
                    replyMarkup: RequestReplyKeyboard);
            }
            
            else if (msg.Type == MessageType.Text)
            {
                await bot.SendTextMessageAsync(msg.Chat.Id, $"Ol√° *{msg.Chat.FirstName}*. \nVoc√™ escreveu: \n*{msg.Text}*", ParseMode.Markdown);
            }
        }
    }
}
